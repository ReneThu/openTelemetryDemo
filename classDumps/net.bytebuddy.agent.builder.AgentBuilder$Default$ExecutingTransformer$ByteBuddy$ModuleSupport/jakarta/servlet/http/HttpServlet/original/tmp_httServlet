Classfile /home/marco/Documents/Development/techEvangelistGeneric/otelDemo/classDumps/net.bytebuddy.agent.builder.AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport/jakarta/servlet/http/HttpServlet/original/HttpServlet.class
  Last modified Aug 31, 2025; size 11722 bytes
  SHA-256 checksum f8329700bff3c6a61146017eba247d2b06eada2f3997e1d0acf0a80391dcce32
  Compiled from "HttpServlet.java"
public abstract class jakarta.servlet.http.HttpServlet extends jakarta.servlet.GenericServlet
  minor version: 0
  major version: 55
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #11                         // jakarta/servlet/http/HttpServlet
  super_class: #2                         // jakarta/servlet/GenericServlet
  interfaces: 0, fields: 17, methods: 18, attributes: 4
Constant pool:
    #1 = Methodref          #2.#3         // jakarta/servlet/GenericServlet."<init>":()V
    #2 = Class              #4            // jakarta/servlet/GenericServlet
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               jakarta/servlet/GenericServlet
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Class              #8            // java/lang/Object
    #8 = Utf8               java/lang/Object
    #9 = Methodref          #7.#3         // java/lang/Object."<init>":()V
   #10 = Fieldref           #11.#12       // jakarta/servlet/http/HttpServlet.cachedAllowHeaderValueLock:Ljava/lang/Object;
   #11 = Class              #13           // jakarta/servlet/http/HttpServlet
   #12 = NameAndType        #14:#15       // cachedAllowHeaderValueLock:Ljava/lang/Object;
   #13 = Utf8               jakarta/servlet/http/HttpServlet
   #14 = Utf8               cachedAllowHeaderValueLock
   #15 = Utf8               Ljava/lang/Object;
   #16 = Fieldref           #11.#17       // jakarta/servlet/http/HttpServlet.cachedAllowHeaderValue:Ljava/lang/String;
   #17 = NameAndType        #18:#19       // cachedAllowHeaderValue:Ljava/lang/String;
   #18 = Utf8               cachedAllowHeaderValue
   #19 = Utf8               Ljava/lang/String;
   #20 = Methodref          #2.#21        // jakarta/servlet/GenericServlet.init:(Ljakarta/servlet/ServletConfig;)V
   #21 = NameAndType        #22:#23       // init:(Ljakarta/servlet/ServletConfig;)V
   #22 = Utf8               init
   #23 = Utf8               (Ljakarta/servlet/ServletConfig;)V
   #24 = String             #25           // jakarta.servlet.http.legacyDoHead
   #25 = Utf8               jakarta.servlet.http.legacyDoHead
   #26 = InterfaceMethodref #27.#28       // jakarta/servlet/ServletConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
   #27 = Class              #29           // jakarta/servlet/ServletConfig
   #28 = NameAndType        #30:#31       // getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
   #29 = Utf8               jakarta/servlet/ServletConfig
   #30 = Utf8               getInitParameter
   #31 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #32 = Methodref          #33.#34       // java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
   #33 = Class              #35           // java/lang/Boolean
   #34 = NameAndType        #36:#37       // parseBoolean:(Ljava/lang/String;)Z
   #35 = Utf8               java/lang/Boolean
   #36 = Utf8               parseBoolean
   #37 = Utf8               (Ljava/lang/String;)Z
   #38 = Fieldref           #11.#39       // jakarta/servlet/http/HttpServlet.cachedUseLegacyDoHead:Z
   #39 = NameAndType        #40:#41       // cachedUseLegacyDoHead:Z
   #40 = Utf8               cachedUseLegacyDoHead
   #41 = Utf8               Z
   #42 = Fieldref           #11.#43       // jakarta/servlet/http/HttpServlet.lStrings:Ljava/util/ResourceBundle;
   #43 = NameAndType        #44:#45       // lStrings:Ljava/util/ResourceBundle;
   #44 = Utf8               lStrings
   #45 = Utf8               Ljava/util/ResourceBundle;
   #46 = String             #47           // http.method_get_not_supported
   #47 = Utf8               http.method_get_not_supported
   #48 = Methodref          #49.#50       // java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
   #49 = Class              #51           // java/util/ResourceBundle
   #50 = NameAndType        #52:#31       // getString:(Ljava/lang/String;)Ljava/lang/String;
   #51 = Utf8               java/util/ResourceBundle
   #52 = Utf8               getString
   #53 = Methodref          #11.#54       // jakarta/servlet/http/HttpServlet.sendMethodNotAllowed:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
   #54 = NameAndType        #55:#56       // sendMethodNotAllowed:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
   #55 = Utf8               sendMethodNotAllowed
   #56 = Utf8               (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
   #57 = Long               -1l
   #59 = Fieldref           #60.#61       // jakarta/servlet/DispatcherType.INCLUDE:Ljakarta/servlet/DispatcherType;
   #60 = Class              #62           // jakarta/servlet/DispatcherType
   #61 = NameAndType        #63:#64       // INCLUDE:Ljakarta/servlet/DispatcherType;
   #62 = Utf8               jakarta/servlet/DispatcherType
   #63 = Utf8               INCLUDE
   #64 = Utf8               Ljakarta/servlet/DispatcherType;
   #65 = InterfaceMethodref #66.#67       // jakarta/servlet/http/HttpServletRequest.getDispatcherType:()Ljakarta/servlet/DispatcherType;
   #66 = Class              #68           // jakarta/servlet/http/HttpServletRequest
   #67 = NameAndType        #69:#70       // getDispatcherType:()Ljakarta/servlet/DispatcherType;
   #68 = Utf8               jakarta/servlet/http/HttpServletRequest
   #69 = Utf8               getDispatcherType
   #70 = Utf8               ()Ljakarta/servlet/DispatcherType;
   #71 = Methodref          #60.#72       // jakarta/servlet/DispatcherType.equals:(Ljava/lang/Object;)Z
   #72 = NameAndType        #73:#74       // equals:(Ljava/lang/Object;)Z
   #73 = Utf8               equals
   #74 = Utf8               (Ljava/lang/Object;)Z
   #75 = Methodref          #11.#76       // jakarta/servlet/http/HttpServlet.doGet:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
   #76 = NameAndType        #77:#78       // doGet:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
   #77 = Utf8               doGet
   #78 = Utf8               (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
   #79 = Class              #80           // jakarta/servlet/http/HttpServlet$NoBodyResponse
   #80 = Utf8               jakarta/servlet/http/HttpServlet$NoBodyResponse
   #81 = Methodref          #79.#82       // jakarta/servlet/http/HttpServlet$NoBodyResponse."<init>":(Ljakarta/servlet/http/HttpServletResponse;)V
   #82 = NameAndType        #5:#83        // "<init>":(Ljakarta/servlet/http/HttpServletResponse;)V
   #83 = Utf8               (Ljakarta/servlet/http/HttpServletResponse;)V
   #84 = InterfaceMethodref #66.#85       // jakarta/servlet/http/HttpServletRequest.isAsyncStarted:()Z
   #85 = NameAndType        #86:#87       // isAsyncStarted:()Z
   #86 = Utf8               isAsyncStarted
   #87 = Utf8               ()Z
   #88 = InterfaceMethodref #66.#89       // jakarta/servlet/http/HttpServletRequest.getAsyncContext:()Ljakarta/servlet/AsyncContext;
   #89 = NameAndType        #90:#91       // getAsyncContext:()Ljakarta/servlet/AsyncContext;
   #90 = Utf8               getAsyncContext
   #91 = Utf8               ()Ljakarta/servlet/AsyncContext;
   #92 = Class              #93           // jakarta/servlet/http/HttpServlet$NoBodyAsyncContextListener
   #93 = Utf8               jakarta/servlet/http/HttpServlet$NoBodyAsyncContextListener
   #94 = Methodref          #92.#95       // jakarta/servlet/http/HttpServlet$NoBodyAsyncContextListener."<init>":(Ljakarta/servlet/http/HttpServlet$NoBodyResponse;)V
   #95 = NameAndType        #5:#96        // "<init>":(Ljakarta/servlet/http/HttpServlet$NoBodyResponse;)V
   #96 = Utf8               (Ljakarta/servlet/http/HttpServlet$NoBodyResponse;)V
   #97 = InterfaceMethodref #98.#99       // jakarta/servlet/AsyncContext.addListener:(Ljakarta/servlet/AsyncListener;)V
   #98 = Class              #100          // jakarta/servlet/AsyncContext
   #99 = NameAndType        #101:#102     // addListener:(Ljakarta/servlet/AsyncListener;)V
  #100 = Utf8               jakarta/servlet/AsyncContext
  #101 = Utf8               addListener
  #102 = Utf8               (Ljakarta/servlet/AsyncListener;)V
  #103 = Methodref          #79.#104      // jakarta/servlet/http/HttpServlet$NoBodyResponse.setContentLength:()V
  #104 = NameAndType        #105:#6       // setContentLength:()V
  #105 = Utf8               setContentLength
  #106 = String             #107          // http.method_post_not_supported
  #107 = Utf8               http.method_post_not_supported
  #108 = String             #109          // http.method_put_not_supported
  #109 = Utf8               http.method_put_not_supported
  #110 = String             #111          // http.method_delete_not_supported
  #111 = Utf8               http.method_delete_not_supported
  #112 = InterfaceMethodref #66.#113      // jakarta/servlet/http/HttpServletRequest.getProtocol:()Ljava/lang/String;
  #113 = NameAndType        #114:#115     // getProtocol:()Ljava/lang/String;
  #114 = Utf8               getProtocol
  #115 = Utf8               ()Ljava/lang/String;
  #116 = Methodref          #117.#118     // java/lang/String.length:()I
  #117 = Class              #119          // java/lang/String
  #118 = NameAndType        #120:#121     // length:()I
  #119 = Utf8               java/lang/String
  #120 = Utf8               length
  #121 = Utf8               ()I
  #122 = String             #123          // 0.9
  #123 = Utf8               0.9
  #124 = Methodref          #117.#125     // java/lang/String.endsWith:(Ljava/lang/String;)Z
  #125 = NameAndType        #126:#37      // endsWith:(Ljava/lang/String;)Z
  #126 = Utf8               endsWith
  #127 = String             #128          // 1.0
  #128 = Utf8               1.0
  #129 = Class              #130          // jakarta/servlet/http/HttpServletResponse
  #130 = Utf8               jakarta/servlet/http/HttpServletResponse
  #131 = InterfaceMethodref #129.#132     // jakarta/servlet/http/HttpServletResponse.sendError:(ILjava/lang/String;)V
  #132 = NameAndType        #133:#134     // sendError:(ILjava/lang/String;)V
  #133 = Utf8               sendError
  #134 = Utf8               (ILjava/lang/String;)V
  #135 = Methodref          #7.#136       // java/lang/Object.getClass:()Ljava/lang/Class;
  #136 = NameAndType        #137:#138     // getClass:()Ljava/lang/Class;
  #137 = Utf8               getClass
  #138 = Utf8               ()Ljava/lang/Class;
  #139 = Methodref          #11.#140      // jakarta/servlet/http/HttpServlet.getAllDeclaredMethods:(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
  #140 = NameAndType        #141:#142     // getAllDeclaredMethods:(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
  #141 = Utf8               getAllDeclaredMethods
  #142 = Utf8               (Ljava/lang/Class;)[Ljava/lang/reflect/Method;
  #143 = Methodref          #144.#145     // java/lang/reflect/Method.getName:()Ljava/lang/String;
  #144 = Class              #146          // java/lang/reflect/Method
  #145 = NameAndType        #147:#115     // getName:()Ljava/lang/String;
  #146 = Utf8               java/lang/reflect/Method
  #147 = Utf8               getName
  #148 = Methodref          #117.#149     // java/lang/String.hashCode:()I
  #149 = NameAndType        #150:#121     // hashCode:()I
  #150 = Utf8               hashCode
  #151 = String             #77           // doGet
  #152 = Methodref          #117.#72      // java/lang/String.equals:(Ljava/lang/Object;)Z
  #153 = String             #154          // doPost
  #154 = Utf8               doPost
  #155 = String             #156          // doPut
  #156 = Utf8               doPut
  #157 = String             #158          // doDelete
  #158 = Utf8               doDelete
  #159 = Class              #160          // java/lang/StringBuilder
  #160 = Utf8               java/lang/StringBuilder
  #161 = Methodref          #159.#3       // java/lang/StringBuilder."<init>":()V
  #162 = String             #163          // GET
  #163 = Utf8               GET
  #164 = Methodref          #159.#165     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #165 = NameAndType        #166:#167     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #166 = Utf8               append
  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #168 = String             #169          // ,
  #169 = Utf8               ,
  #170 = String             #171          // HEAD
  #171 = Utf8               HEAD
  #172 = String             #173          // POST
  #173 = Utf8               POST
  #174 = String             #175          // PUT
  #175 = Utf8               PUT
  #176 = String             #177          // DELETE
  #177 = Utf8               DELETE
  #178 = String             #179          // OPTIONS
  #179 = Utf8               OPTIONS
  #180 = Methodref          #159.#181     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #181 = NameAndType        #182:#115     // toString:()Ljava/lang/String;
  #182 = Utf8               toString
  #183 = Methodref          #7.#72        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #184 = Methodref          #185.#186     // java/lang/Class.getSuperclass:()Ljava/lang/Class;
  #185 = Class              #187          // java/lang/Class
  #186 = NameAndType        #188:#138     // getSuperclass:()Ljava/lang/Class;
  #187 = Utf8               java/lang/Class
  #188 = Utf8               getSuperclass
  #189 = Methodref          #185.#190     // java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
  #190 = NameAndType        #191:#192     // getDeclaredMethods:()[Ljava/lang/reflect/Method;
  #191 = Utf8               getDeclaredMethods
  #192 = Utf8               ()[Ljava/lang/reflect/Method;
  #193 = Methodref          #194.#195     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #194 = Class              #196          // java/lang/System
  #195 = NameAndType        #197:#198     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #196 = Utf8               java/lang/System
  #197 = Utf8               arraycopy
  #198 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #199 = Methodref          #11.#200      // jakarta/servlet/http/HttpServlet.getCachedAllowHeaderValue:()Ljava/lang/String;
  #200 = NameAndType        #201:#115     // getCachedAllowHeaderValue:()Ljava/lang/String;
  #201 = Utf8               getCachedAllowHeaderValue
  #202 = Methodref          #203.#204     // jakarta/servlet/http/HttpServlet$TomcatHack.getAllowTrace:(Ljakarta/servlet/http/HttpServletRequest;)Z
  #203 = Class              #205          // jakarta/servlet/http/HttpServlet$TomcatHack
  #204 = NameAndType        #206:#207     // getAllowTrace:(Ljakarta/servlet/http/HttpServletRequest;)Z
  #205 = Utf8               jakarta/servlet/http/HttpServlet$TomcatHack
  #206 = Utf8               getAllowTrace
  #207 = Utf8               (Ljakarta/servlet/http/HttpServletRequest;)Z
  #208 = String             #209          // TRACE
  #209 = Utf8               TRACE
  #210 = InvokeDynamic      #0:#211       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
  #211 = NameAndType        #212:#31      // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
  #212 = Utf8               makeConcatWithConstants
  #213 = String             #214          // Allow
  #214 = Utf8               Allow
  #215 = InterfaceMethodref #129.#216     // jakarta/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
  #216 = NameAndType        #217:#218     // setHeader:(Ljava/lang/String;Ljava/lang/String;)V
  #217 = Utf8               setHeader
  #218 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #219 = String             #220          // \r\n
  #220 = Utf8               \r\n
  #221 = String             #222          // TRACE
  #222 = Utf8               TRACE
  #223 = Methodref          #159.#224     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #224 = NameAndType        #5:#225       // "<init>":(Ljava/lang/String;)V
  #225 = Utf8               (Ljava/lang/String;)V
  #226 = InterfaceMethodref #66.#227      // jakarta/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
  #227 = NameAndType        #228:#115     // getRequestURI:()Ljava/lang/String;
  #228 = Utf8               getRequestURI
  #229 = Methodref          #159.#230     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #230 = NameAndType        #166:#231     // append:(C)Ljava/lang/StringBuilder;
  #231 = Utf8               (C)Ljava/lang/StringBuilder;
  #232 = InterfaceMethodref #66.#233      // jakarta/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
  #233 = NameAndType        #234:#235     // getHeaderNames:()Ljava/util/Enumeration;
  #234 = Utf8               getHeaderNames
  #235 = Utf8               ()Ljava/util/Enumeration;
  #236 = InterfaceMethodref #237.#238     // java/util/Enumeration.hasMoreElements:()Z
  #237 = Class              #239          // java/util/Enumeration
  #238 = NameAndType        #240:#87      // hasMoreElements:()Z
  #239 = Utf8               java/util/Enumeration
  #240 = Utf8               hasMoreElements
  #241 = InterfaceMethodref #237.#242     // java/util/Enumeration.nextElement:()Ljava/lang/Object;
  #242 = NameAndType        #243:#244     // nextElement:()Ljava/lang/Object;
  #243 = Utf8               nextElement
  #244 = Utf8               ()Ljava/lang/Object;
  #245 = Methodref          #11.#246      // jakarta/servlet/http/HttpServlet.isSensitiveHeader:(Ljava/lang/String;)Z
  #246 = NameAndType        #247:#37      // isSensitiveHeader:(Ljava/lang/String;)Z
  #247 = Utf8               isSensitiveHeader
  #248 = InterfaceMethodref #66.#249      // jakarta/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
  #249 = NameAndType        #250:#251     // getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
  #250 = Utf8               getHeaders
  #251 = Utf8               (Ljava/lang/String;)Ljava/util/Enumeration;
  #252 = String             #253          // :
  #253 = Utf8               :
  #254 = Methodref          #159.#118     // java/lang/StringBuilder.length:()I
  #255 = String             #256          // message/http
  #256 = Utf8               message/http
  #257 = InterfaceMethodref #129.#258     // jakarta/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
  #258 = NameAndType        #259:#225     // setContentType:(Ljava/lang/String;)V
  #259 = Utf8               setContentType
  #260 = InterfaceMethodref #129.#261     // jakarta/servlet/http/HttpServletResponse.setContentLength:(I)V
  #261 = NameAndType        #105:#262     // setContentLength:(I)V
  #262 = Utf8               (I)V
  #263 = InterfaceMethodref #129.#264     // jakarta/servlet/http/HttpServletResponse.getOutputStream:()Ljakarta/servlet/ServletOutputStream;
  #264 = NameAndType        #265:#266     // getOutputStream:()Ljakarta/servlet/ServletOutputStream;
  #265 = Utf8               getOutputStream
  #266 = Utf8               ()Ljakarta/servlet/ServletOutputStream;
  #267 = Methodref          #268.#269     // jakarta/servlet/ServletOutputStream.print:(Ljava/lang/String;)V
  #268 = Class              #270          // jakarta/servlet/ServletOutputStream
  #269 = NameAndType        #271:#225     // print:(Ljava/lang/String;)V
  #270 = Utf8               jakarta/servlet/ServletOutputStream
  #271 = Utf8               print
  #272 = Methodref          #268.#273     // jakarta/servlet/ServletOutputStream.close:()V
  #273 = NameAndType        #274:#6       // close:()V
  #274 = Utf8               close
  #275 = Fieldref           #276.#277     // java/util/Locale.ENGLISH:Ljava/util/Locale;
  #276 = Class              #278          // java/util/Locale
  #277 = NameAndType        #279:#280     // ENGLISH:Ljava/util/Locale;
  #278 = Utf8               java/util/Locale
  #279 = Utf8               ENGLISH
  #280 = Utf8               Ljava/util/Locale;
  #281 = Methodref          #117.#282     // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #282 = NameAndType        #283:#284     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #283 = Utf8               toLowerCase
  #284 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #285 = Fieldref           #11.#286      // jakarta/servlet/http/HttpServlet.SENSITIVE_HTTP_HEADERS:Ljava/util/List;
  #286 = NameAndType        #287:#288     // SENSITIVE_HTTP_HEADERS:Ljava/util/List;
  #287 = Utf8               SENSITIVE_HTTP_HEADERS
  #288 = Utf8               Ljava/util/List;
  #289 = InterfaceMethodref #290.#291     // java/util/List.iterator:()Ljava/util/Iterator;
  #290 = Class              #292          // java/util/List
  #291 = NameAndType        #293:#294     // iterator:()Ljava/util/Iterator;
  #292 = Utf8               java/util/List
  #293 = Utf8               iterator
  #294 = Utf8               ()Ljava/util/Iterator;
  #295 = InterfaceMethodref #296.#297     // java/util/Iterator.hasNext:()Z
  #296 = Class              #298          // java/util/Iterator
  #297 = NameAndType        #299:#87      // hasNext:()Z
  #298 = Utf8               java/util/Iterator
  #299 = Utf8               hasNext
  #300 = InterfaceMethodref #296.#301     // java/util/Iterator.next:()Ljava/lang/Object;
  #301 = NameAndType        #302:#244     // next:()Ljava/lang/Object;
  #302 = Utf8               next
  #303 = Methodref          #117.#304     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #304 = NameAndType        #305:#37      // startsWith:(Ljava/lang/String;)Z
  #305 = Utf8               startsWith
  #306 = InterfaceMethodref #66.#307      // jakarta/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
  #307 = NameAndType        #308:#115     // getMethod:()Ljava/lang/String;
  #308 = Utf8               getMethod
  #309 = Methodref          #11.#310      // jakarta/servlet/http/HttpServlet.getLastModified:(Ljakarta/servlet/http/HttpServletRequest;)J
  #310 = NameAndType        #311:#312     // getLastModified:(Ljakarta/servlet/http/HttpServletRequest;)J
  #311 = Utf8               getLastModified
  #312 = Utf8               (Ljakarta/servlet/http/HttpServletRequest;)J
  #313 = String             #314          // If-Modified-Since
  #314 = Utf8               If-Modified-Since
  #315 = InterfaceMethodref #66.#316      // jakarta/servlet/http/HttpServletRequest.getDateHeader:(Ljava/lang/String;)J
  #316 = NameAndType        #317:#318     // getDateHeader:(Ljava/lang/String;)J
  #317 = Utf8               getDateHeader
  #318 = Utf8               (Ljava/lang/String;)J
  #319 = Class              #320          // java/lang/IllegalArgumentException
  #320 = Utf8               java/lang/IllegalArgumentException
  #321 = Long               1000l
  #323 = Methodref          #11.#324      // jakarta/servlet/http/HttpServlet.maybeSetLastModified:(Ljakarta/servlet/http/HttpServletResponse;J)V
  #324 = NameAndType        #325:#326     // maybeSetLastModified:(Ljakarta/servlet/http/HttpServletResponse;J)V
  #325 = Utf8               maybeSetLastModified
  #326 = Utf8               (Ljakarta/servlet/http/HttpServletResponse;J)V
  #327 = InterfaceMethodref #129.#328     // jakarta/servlet/http/HttpServletResponse.setStatus:(I)V
  #328 = NameAndType        #329:#262     // setStatus:(I)V
  #329 = Utf8               setStatus
  #330 = Methodref          #11.#331      // jakarta/servlet/http/HttpServlet.doHead:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #331 = NameAndType        #332:#78      // doHead:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #332 = Utf8               doHead
  #333 = Methodref          #11.#334      // jakarta/servlet/http/HttpServlet.doPost:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #334 = NameAndType        #154:#78      // doPost:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #335 = Methodref          #11.#336      // jakarta/servlet/http/HttpServlet.doPut:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #336 = NameAndType        #156:#78      // doPut:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #337 = Methodref          #11.#338      // jakarta/servlet/http/HttpServlet.doDelete:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #338 = NameAndType        #158:#78      // doDelete:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #339 = Methodref          #11.#340      // jakarta/servlet/http/HttpServlet.doOptions:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #340 = NameAndType        #341:#78      // doOptions:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #341 = Utf8               doOptions
  #342 = Methodref          #11.#343      // jakarta/servlet/http/HttpServlet.doTrace:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #343 = NameAndType        #344:#78      // doTrace:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #344 = Utf8               doTrace
  #345 = String             #346          // http.method_not_implemented
  #346 = Utf8               http.method_not_implemented
  #347 = Methodref          #348.#349     // java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #348 = Class              #350          // java/text/MessageFormat
  #349 = NameAndType        #351:#352     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #350 = Utf8               java/text/MessageFormat
  #351 = Utf8               format
  #352 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #353 = String             #354          // Last-Modified
  #354 = Utf8               Last-Modified
  #355 = InterfaceMethodref #129.#356     // jakarta/servlet/http/HttpServletResponse.containsHeader:(Ljava/lang/String;)Z
  #356 = NameAndType        #357:#37      // containsHeader:(Ljava/lang/String;)Z
  #357 = Utf8               containsHeader
  #358 = InterfaceMethodref #129.#359     // jakarta/servlet/http/HttpServletResponse.setDateHeader:(Ljava/lang/String;J)V
  #359 = NameAndType        #360:#361     // setDateHeader:(Ljava/lang/String;J)V
  #360 = Utf8               setDateHeader
  #361 = Utf8               (Ljava/lang/String;J)V
  #362 = Class              #363          // java/lang/ClassCastException
  #363 = Utf8               java/lang/ClassCastException
  #364 = Class              #365          // jakarta/servlet/ServletException
  #365 = Utf8               jakarta/servlet/ServletException
  #366 = String             #367          // http.non_http
  #367 = Utf8               http.non_http
  #368 = Methodref          #364.#224     // jakarta/servlet/ServletException."<init>":(Ljava/lang/String;)V
  #369 = Methodref          #11.#370      // jakarta/servlet/http/HttpServlet.service:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #370 = NameAndType        #371:#78      // service:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
  #371 = Utf8               service
  #372 = String             #373          // jakarta.servlet.http.LocalStrings
  #373 = Utf8               jakarta.servlet.http.LocalStrings
  #374 = Methodref          #49.#375      // java/util/ResourceBundle.getBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;
  #375 = NameAndType        #376:#377     // getBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;
  #376 = Utf8               getBundle
  #377 = Utf8               (Ljava/lang/String;)Ljava/util/ResourceBundle;
  #378 = String             #379          // authorization
  #379 = Utf8               authorization
  #380 = String             #381          // cookie
  #381 = Utf8               cookie
  #382 = String             #383          // x-forwarded
  #383 = Utf8               x-forwarded
  #384 = String             #385          // forwarded
  #385 = Utf8               forwarded
  #386 = String             #387          // proxy-authorization
  #387 = Utf8               proxy-authorization
  #388 = Methodref          #389.#390     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
  #389 = Class              #391          // java/util/Arrays
  #390 = NameAndType        #392:#393     // asList:([Ljava/lang/Object;)Ljava/util/List;
  #391 = Utf8               java/util/Arrays
  #392 = Utf8               asList
  #393 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;
  #394 = Utf8               serialVersionUID
  #395 = Utf8               J
  #396 = Utf8               ConstantValue
  #397 = Long               1l
  #399 = Utf8               METHOD_DELETE
  #400 = Utf8               METHOD_HEAD
  #401 = Utf8               METHOD_GET
  #402 = Utf8               METHOD_OPTIONS
  #403 = Utf8               METHOD_POST
  #404 = Utf8               METHOD_PUT
  #405 = Utf8               METHOD_TRACE
  #406 = Utf8               HEADER_IFMODSINCE
  #407 = Utf8               HEADER_LASTMOD
  #408 = Utf8               LSTRING_FILE
  #409 = Utf8               Signature
  #410 = Utf8               Ljava/util/List<Ljava/lang/String;>;
  #411 = Utf8               LEGACY_DO_HEAD
  #412 = Utf8               Deprecated
  #413 = Utf8               RuntimeVisibleAnnotations
  #414 = Utf8               Ljava/lang/Deprecated;
  #415 = Utf8               forRemoval
  #416 = Integer            1
  #417 = Utf8               since
  #418 = Utf8               Servlet 6.0
  #419 = Utf8               Code
  #420 = Utf8               LineNumberTable
  #421 = Utf8               LocalVariableTable
  #422 = Utf8               this
  #423 = Utf8               Ljakarta/servlet/http/HttpServlet;
  #424 = Utf8               config
  #425 = Utf8               Ljakarta/servlet/ServletConfig;
  #426 = Utf8               Exceptions
  #427 = Utf8               req
  #428 = Utf8               Ljakarta/servlet/http/HttpServletRequest;
  #429 = Utf8               resp
  #430 = Utf8               Ljakarta/servlet/http/HttpServletResponse;
  #431 = Utf8               msg
  #432 = Class              #433          // java/io/IOException
  #433 = Utf8               java/io/IOException
  #434 = Utf8               response
  #435 = Utf8               Ljakarta/servlet/http/HttpServlet$NoBodyResponse;
  #436 = Utf8               StackMapTable
  #437 = Utf8               protocol
  #438 = Utf8               method
  #439 = Utf8               Ljava/lang/reflect/Method;
  #440 = Utf8               methods
  #441 = Utf8               [Ljava/lang/reflect/Method;
  #442 = Utf8               allowGet
  #443 = Utf8               allowHead
  #444 = Utf8               allowPost
  #445 = Utf8               allowPut
  #446 = Utf8               allowDelete
  #447 = Utf8               allow
  #448 = Utf8               Ljava/lang/StringBuilder;
  #449 = Class              #441          // "[Ljava/lang/reflect/Method;"
  #450 = Class              #451          // java/lang/Throwable
  #451 = Utf8               java/lang/Throwable
  #452 = Utf8               allMethods
  #453 = Utf8               c
  #454 = Utf8               Ljava/lang/Class;
  #455 = Utf8               parentMethods
  #456 = Utf8               thisMethods
  #457 = Utf8               LocalVariableTypeTable
  #458 = Utf8               Ljava/lang/Class<*>;
  #459 = Utf8               (Ljava/lang/Class<*>;)[Ljava/lang/reflect/Method;
  #460 = Utf8               headerValue
  #461 = Utf8               headerValues
  #462 = Utf8               Ljava/util/Enumeration;
  #463 = Utf8               headerName
  #464 = Utf8               responseLength
  #465 = Utf8               I
  #466 = Utf8               CRLF
  #467 = Utf8               buffer
  #468 = Utf8               reqHeaderNames
  #469 = Utf8               out
  #470 = Utf8               Ljakarta/servlet/ServletOutputStream;
  #471 = Utf8               Ljava/util/Enumeration<Ljava/lang/String;>;
  #472 = Utf8               sensitiveHeaderName
  #473 = Utf8               lcHeaderName
  #474 = Utf8               ifModifiedSince
  #475 = Utf8               iae
  #476 = Utf8               Ljava/lang/IllegalArgumentException;
  #477 = Utf8               lastModified
  #478 = Utf8               errMsg
  #479 = Utf8               errArgs
  #480 = Utf8               [Ljava/lang/Object;
  #481 = Utf8               (Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
  #482 = Utf8               request
  #483 = Utf8               e
  #484 = Utf8               Ljava/lang/ClassCastException;
  #485 = Utf8               Ljakarta/servlet/ServletRequest;
  #486 = Utf8               res
  #487 = Utf8               Ljakarta/servlet/ServletResponse;
  #488 = Utf8               <clinit>
  #489 = Utf8               SourceFile
  #490 = Utf8               HttpServlet.java
  #491 = Utf8               NestMembers
  #492 = Class              #493          // jakarta/servlet/http/HttpServlet$NoBodyPrintWriter
  #493 = Utf8               jakarta/servlet/http/HttpServlet$NoBodyPrintWriter
  #494 = Class              #495          // jakarta/servlet/http/HttpServlet$NoBodyOutputStream
  #495 = Utf8               jakarta/servlet/http/HttpServlet$NoBodyOutputStream
  #496 = Utf8               BootstrapMethods
  #497 = String             #498          // \u0001, TRACE
  #498 = Utf8               \u0001, TRACE
  #499 = MethodHandle       6:#500        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #500 = Methodref          #501.#502     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #501 = Class              #503          // java/lang/invoke/StringConcatFactory
  #502 = NameAndType        #212:#504     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #503 = Utf8               java/lang/invoke/StringConcatFactory
  #504 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #505 = Utf8               InnerClasses
  #506 = Utf8               NoBodyResponse
  #507 = Utf8               NoBodyAsyncContextListener
  #508 = Utf8               TomcatHack
  #509 = Utf8               NoBodyPrintWriter
  #510 = Utf8               NoBodyOutputStream
  #511 = Class              #512          // java/lang/invoke/MethodHandles$Lookup
  #512 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #513 = Class              #514          // java/lang/invoke/MethodHandles
  #514 = Utf8               java/lang/invoke/MethodHandles
  #515 = Utf8               Lookup
{
  public static final java.lang.String LEGACY_DO_HEAD;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String jakarta.servlet.http.legacyDoHead
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #414(#415=Z#416,#417=s#418)
        java.lang.Deprecated(
          forRemoval=true
          since="Servlet 6.0"
        )

  public jakarta.servlet.http.HttpServlet();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method jakarta/servlet/GenericServlet."<init>":()V
         4: aload_0
         5: new           #7                  // class java/lang/Object
         8: dup
         9: invokespecial #9                  // Method java/lang/Object."<init>":()V
        12: putfield      #10                 // Field cachedAllowHeaderValueLock:Ljava/lang/Object;
        15: aload_0
        16: aconst_null
        17: putfield      #16                 // Field cachedAllowHeaderValue:Ljava/lang/String;
        20: return
      LineNumberTable:
        line 114: 0
        line 98: 4
        line 103: 15
        line 116: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Ljakarta/servlet/http/HttpServlet;

  public void init(jakarta.servlet.ServletConfig) throws jakarta.servlet.ServletException;
    descriptor: (Ljakarta/servlet/ServletConfig;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #20                 // Method jakarta/servlet/GenericServlet.init:(Ljakarta/servlet/ServletConfig;)V
         5: aload_0
         6: aload_1
         7: ldc           #24                 // String jakarta.servlet.http.legacyDoHead
         9: invokeinterface #26,  2           // InterfaceMethod jakarta/servlet/ServletConfig.getInitParameter:(Ljava/lang/String;)Ljava/lang/String;
        14: invokestatic  #32                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        17: putfield      #38                 // Field cachedUseLegacyDoHead:Z
        20: return
      LineNumberTable:
        line 121: 0
        line 122: 5
        line 123: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Ljakarta/servlet/http/HttpServlet;
            0      21     1 config   Ljakarta/servlet/ServletConfig;
    Exceptions:
      throws jakarta.servlet.ServletException

  protected void doGet(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field lStrings:Ljava/util/ResourceBundle;
         3: ldc           #46                 // String http.method_get_not_supported
         5: invokevirtual #48                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
         8: astore_3
         9: aload_0
        10: aload_1
        11: aload_2
        12: aload_3
        13: invokevirtual #53                 // Method sendMethodNotAllowed:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
        16: return
      LineNumberTable:
        line 167: 0
        line 168: 9
        line 169: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Ljakarta/servlet/http/HttpServlet;
            0      17     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0      17     2  resp   Ljakarta/servlet/http/HttpServletResponse;
            9       8     3   msg   Ljava/lang/String;
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  protected long getLastModified(jakarta.servlet.http.HttpServletRequest);
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;)J
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=2, args_size=2
         0: ldc2_w        #57                 // long -1l
         3: lreturn
      LineNumberTable:
        line 186: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Ljakarta/servlet/http/HttpServlet;
            0       4     1   req   Ljakarta/servlet/http/HttpServletRequest;

  protected void doHead(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #59                 // Field jakarta/servlet/DispatcherType.INCLUDE:Ljakarta/servlet/DispatcherType;
         3: aload_1
         4: invokeinterface #65,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getDispatcherType:()Ljakarta/servlet/DispatcherType;
         9: invokevirtual #71                 // Method jakarta/servlet/DispatcherType.equals:(Ljava/lang/Object;)Z
        12: ifne          22
        15: aload_0
        16: getfield      #38                 // Field cachedUseLegacyDoHead:Z
        19: ifne          31
        22: aload_0
        23: aload_1
        24: aload_2
        25: invokevirtual #75                 // Method doGet:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
        28: goto          81
        31: new           #79                 // class jakarta/servlet/http/HttpServlet$NoBodyResponse
        34: dup
        35: aload_2
        36: invokespecial #81                 // Method jakarta/servlet/http/HttpServlet$NoBodyResponse."<init>":(Ljakarta/servlet/http/HttpServletResponse;)V
        39: astore_3
        40: aload_0
        41: aload_1
        42: aload_3
        43: invokevirtual #75                 // Method doGet:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
        46: aload_1
        47: invokeinterface #84,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.isAsyncStarted:()Z
        52: ifeq          77
        55: aload_1
        56: invokeinterface #88,  1           // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getAsyncContext:()Ljakarta/servlet/AsyncContext;
        61: new           #92                 // class jakarta/servlet/http/HttpServlet$NoBodyAsyncContextListener
        64: dup
        65: aload_3
        66: invokespecial #94                 // Method jakarta/servlet/http/HttpServlet$NoBodyAsyncContextListener."<init>":(Ljakarta/servlet/http/HttpServlet$NoBodyResponse;)V
        69: invokeinterface #97,  2           // InterfaceMethod jakarta/servlet/AsyncContext.addListener:(Ljakarta/servlet/AsyncListener;)V
        74: goto          81
        77: aload_3
        78: invokevirtual #103                // Method jakarta/servlet/http/HttpServlet$NoBodyResponse.setContentLength:()V
        81: return
      LineNumberTable:
        line 210: 0
        line 211: 22
        line 213: 31
        line 214: 40
        line 215: 46
        line 216: 55
        line 218: 77
        line 221: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      41     3 response   Ljakarta/servlet/http/HttpServlet$NoBodyResponse;
            0      82     0  this   Ljakarta/servlet/http/HttpServlet;
            0      82     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0      82     2  resp   Ljakarta/servlet/http/HttpServletResponse;
      StackMapTable: number_of_entries = 4
        frame_type = 22 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ class jakarta/servlet/http/HttpServlet$NoBodyResponse ]
        frame_type = 250 /* chop */
          offset_delta = 3
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  protected void doPost(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field lStrings:Ljava/util/ResourceBundle;
         3: ldc           #106                // String http.method_post_not_supported
         5: invokevirtual #48                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
         8: astore_3
         9: aload_0
        10: aload_1
        11: aload_2
        12: aload_3
        13: invokevirtual #53                 // Method sendMethodNotAllowed:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
        16: return
      LineNumberTable:
        line 261: 0
        line 262: 9
        line 263: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Ljakarta/servlet/http/HttpServlet;
            0      17     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0      17     2  resp   Ljakarta/servlet/http/HttpServletResponse;
            9       8     3   msg   Ljava/lang/String;
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  protected void doPut(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field lStrings:Ljava/util/ResourceBundle;
         3: ldc           #108                // String http.method_put_not_supported
         5: invokevirtual #48                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
         8: astore_3
         9: aload_0
        10: aload_1
        11: aload_2
        12: aload_3
        13: invokevirtual #53                 // Method sendMethodNotAllowed:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
        16: return
      LineNumberTable:
        line 290: 0
        line 291: 9
        line 292: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Ljakarta/servlet/http/HttpServlet;
            0      17     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0      17     2  resp   Ljakarta/servlet/http/HttpServletResponse;
            9       8     3   msg   Ljava/lang/String;
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  protected void doDelete(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field lStrings:Ljava/util/ResourceBundle;
         3: ldc           #110                // String http.method_delete_not_supported
         5: invokevirtual #48                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
         8: astore_3
         9: aload_0
        10: aload_1
        11: aload_2
        12: aload_3
        13: invokevirtual #53                 // Method sendMethodNotAllowed:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;Ljava/lang/String;)V
        16: return
      LineNumberTable:
        line 313: 0
        line 314: 9
        line 315: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Ljakarta/servlet/http/HttpServlet;
            0      17     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0      17     2  resp   Ljakarta/servlet/http/HttpServletResponse;
            9       8     3   msg   Ljava/lang/String;
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  protected void doOptions(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: invokevirtual #199                // Method getCachedAllowHeaderValue:()Ljava/lang/String;
         4: astore_3
         5: aload_1
         6: invokestatic  #202                // Method jakarta/servlet/http/HttpServlet$TomcatHack.getAllowTrace:(Ljakarta/servlet/http/HttpServletRequest;)Z
         9: ifeq          32
        12: aload_3
        13: invokevirtual #116                // Method java/lang/String.length:()I
        16: ifne          25
        19: ldc           #208                // String TRACE
        21: astore_3
        22: goto          32
        25: aload_3
        26: invokedynamic #210,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        31: astore_3
        32: aload_2
        33: ldc           #213                // String Allow
        35: aload_3
        36: invokeinterface #215,  3          // InterfaceMethod jakarta/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
        41: return
      LineNumberTable:
        line 451: 0
        line 454: 5
        line 455: 12
        line 456: 19
        line 458: 25
        line 462: 32
        line 463: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Ljakarta/servlet/http/HttpServlet;
            0      42     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0      42     2  resp   Ljakarta/servlet/http/HttpServletResponse;
            5      37     3 allow   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class java/lang/String ]
        frame_type = 6 /* same */
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  protected void doTrace(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=10, args_size=3
         0: ldc           #219                // String \r\n
         2: astore        4
         4: new           #159                // class java/lang/StringBuilder
         7: dup
         8: ldc           #221                // String TRACE
        10: invokespecial #223                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        13: aload_1
        14: invokeinterface #226,  1          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
        19: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: bipush        32
        24: invokevirtual #229                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        27: aload_1
        28: invokeinterface #112,  1          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getProtocol:()Ljava/lang/String;
        33: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: astore        5
        38: aload_1
        39: invokeinterface #232,  1          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
        44: astore        6
        46: aload         6
        48: invokeinterface #236,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
        53: ifeq          138
        56: aload         6
        58: invokeinterface #241,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
        63: checkcast     #117                // class java/lang/String
        66: astore        7
        68: aload_0
        69: aload         7
        71: invokevirtual #245                // Method isSensitiveHeader:(Ljava/lang/String;)Z
        74: ifne          135
        77: aload_1
        78: aload         7
        80: invokeinterface #248,  2          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
        85: astore        8
        87: aload         8
        89: invokeinterface #236,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
        94: ifeq          135
        97: aload         8
        99: invokeinterface #241,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
       104: checkcast     #117                // class java/lang/String
       107: astore        9
       109: aload         5
       111: aload         4
       113: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       116: aload         7
       118: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       121: ldc           #252                // String :
       123: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       126: aload         9
       128: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       131: pop
       132: goto          87
       135: goto          46
       138: aload         5
       140: aload         4
       142: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       145: pop
       146: aload         5
       148: invokevirtual #254                // Method java/lang/StringBuilder.length:()I
       151: istore_3
       152: aload_2
       153: ldc           #255                // String message/http
       155: invokeinterface #257,  2          // InterfaceMethod jakarta/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
       160: aload_2
       161: iload_3
       162: invokeinterface #260,  2          // InterfaceMethod jakarta/servlet/http/HttpServletResponse.setContentLength:(I)V
       167: aload_2
       168: invokeinterface #263,  1          // InterfaceMethod jakarta/servlet/http/HttpServletResponse.getOutputStream:()Ljakarta/servlet/ServletOutputStream;
       173: astore        7
       175: aload         7
       177: aload         5
       179: invokevirtual #180                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       182: invokevirtual #267                // Method jakarta/servlet/ServletOutputStream.print:(Ljava/lang/String;)V
       185: aload         7
       187: invokevirtual #272                // Method jakarta/servlet/ServletOutputStream.close:()V
       190: return
      LineNumberTable:
        line 481: 0
        line 482: 4
        line 483: 14
        line 485: 38
        line 487: 46
        line 488: 56
        line 490: 68
        line 491: 77
        line 492: 87
        line 493: 97
        line 494: 109
        line 495: 132
        line 497: 135
        line 499: 138
        line 501: 146
        line 503: 152
        line 504: 160
        line 505: 167
        line 506: 175
        line 507: 185
        line 508: 190
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          109      23     9 headerValue   Ljava/lang/String;
           87      48     8 headerValues   Ljava/util/Enumeration;
           68      67     7 headerName   Ljava/lang/String;
            0     191     0  this   Ljakarta/servlet/http/HttpServlet;
            0     191     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0     191     2  resp   Ljakarta/servlet/http/HttpServletResponse;
          152      39     3 responseLength   I
            4     187     4  CRLF   Ljava/lang/String;
           38     153     5 buffer   Ljava/lang/StringBuilder;
           46     145     6 reqHeaderNames   Ljava/util/Enumeration;
          175      16     7   out   Ljakarta/servlet/ServletOutputStream;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           87      48     8 headerValues   Ljava/util/Enumeration<Ljava/lang/String;>;
           46     145     6 reqHeaderNames   Ljava/util/Enumeration<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class jakarta/servlet/http/HttpServlet, class jakarta/servlet/http/HttpServletRequest, class jakarta/servlet/http/HttpServletResponse, top, class java/lang/String, class java/lang/StringBuilder, class java/util/Enumeration ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 40
          locals = [ class java/lang/String, class java/util/Enumeration ]
        frame_type = 249 /* chop */
          offset_delta = 47
        frame_type = 2 /* same */
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  protected void service(jakarta.servlet.http.HttpServletRequest, jakarta.servlet.http.HttpServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=6, locals=9, args_size=3
         0: aload_1
         1: invokeinterface #306,  1          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
         6: astore_3
         7: aload_3
         8: ldc           #162                // String GET
        10: invokevirtual #152                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        13: ifeq          106
        16: aload_0
        17: aload_1
        18: invokevirtual #309                // Method getLastModified:(Ljakarta/servlet/http/HttpServletRequest;)J
        21: lstore        4
        23: lload         4
        25: ldc2_w        #57                 // long -1l
        28: lcmp
        29: ifne          41
        32: aload_0
        33: aload_1
        34: aload_2
        35: invokevirtual #75                 // Method doGet:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
        38: goto          103
        41: aload_1
        42: ldc_w         #313                // String If-Modified-Since
        45: invokeinterface #315,  2          // InterfaceMethod jakarta/servlet/http/HttpServletRequest.getDateHeader:(Ljava/lang/String;)J
        50: lstore        6
        52: goto          62
        55: astore        8
        57: ldc2_w        #57                 // long -1l
        60: lstore        6
        62: lload         6
        64: lload         4
        66: ldc2_w        #321                // long 1000l
        69: ldiv
        70: ldc2_w        #321                // long 1000l
        73: lmul
        74: lcmp
        75: ifge          94
        78: aload_0
        79: aload_2
        80: lload         4
        82: invokevirtual #323                // Method maybeSetLastModified:(Ljakarta/servlet/http/HttpServletResponse;J)V
        85: aload_0
        86: aload_1
        87: aload_2
        88: invokevirtual #75                 // Method doGet:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
        91: goto          103
        94: aload_2
        95: sipush        304
        98: invokeinterface #327,  2          // InterfaceMethod jakarta/servlet/http/HttpServletResponse.setStatus:(I)V
       103: goto          270
       106: aload_3
       107: ldc           #170                // String HEAD
       109: invokevirtual #152                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       112: ifeq          138
       115: aload_0
       116: aload_1
       117: invokevirtual #309                // Method getLastModified:(Ljakarta/servlet/http/HttpServletRequest;)J
       120: lstore        4
       122: aload_0
       123: aload_2
       124: lload         4
       126: invokevirtual #323                // Method maybeSetLastModified:(Ljakarta/servlet/http/HttpServletResponse;J)V
       129: aload_0
       130: aload_1
       131: aload_2
       132: invokevirtual #330                // Method doHead:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
       135: goto          270
       138: aload_3
       139: ldc           #172                // String POST
       141: invokevirtual #152                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       144: ifeq          156
       147: aload_0
       148: aload_1
       149: aload_2
       150: invokevirtual #333                // Method doPost:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
       153: goto          270
       156: aload_3
       157: ldc           #174                // String PUT
       159: invokevirtual #152                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       162: ifeq          174
       165: aload_0
       166: aload_1
       167: aload_2
       168: invokevirtual #335                // Method doPut:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
       171: goto          270
       174: aload_3
       175: ldc           #176                // String DELETE
       177: invokevirtual #152                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       180: ifeq          192
       183: aload_0
       184: aload_1
       185: aload_2
       186: invokevirtual #337                // Method doDelete:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
       189: goto          270
       192: aload_3
       193: ldc           #178                // String OPTIONS
       195: invokevirtual #152                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       198: ifeq          210
       201: aload_0
       202: aload_1
       203: aload_2
       204: invokevirtual #339                // Method doOptions:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
       207: goto          270
       210: aload_3
       211: ldc           #208                // String TRACE
       213: invokevirtual #152                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       216: ifeq          228
       219: aload_0
       220: aload_1
       221: aload_2
       222: invokevirtual #342                // Method doTrace:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
       225: goto          270
       228: getstatic     #42                 // Field lStrings:Ljava/util/ResourceBundle;
       231: ldc_w         #345                // String http.method_not_implemented
       234: invokevirtual #48                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
       237: astore        4
       239: iconst_1
       240: anewarray     #7                  // class java/lang/Object
       243: astore        5
       245: aload         5
       247: iconst_0
       248: aload_3
       249: aastore
       250: aload         4
       252: aload         5
       254: invokestatic  #347                // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       257: astore        4
       259: aload_2
       260: sipush        501
       263: aload         4
       265: invokeinterface #131,  3          // InterfaceMethod jakarta/servlet/http/HttpServletResponse.sendError:(ILjava/lang/String;)V
       270: return
      Exception table:
         from    to  target type
            41    52    55   Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 557: 0
        line 559: 7
        line 560: 16
        line 561: 23
        line 564: 32
        line 568: 41
        line 572: 52
        line 569: 55
        line 571: 57
        line 573: 62
        line 577: 78
        line 578: 85
        line 580: 94
        line 584: 103
        line 585: 115
        line 586: 122
        line 587: 129
        line 589: 135
        line 590: 147
        line 592: 156
        line 593: 165
        line 595: 174
        line 596: 183
        line 598: 192
        line 599: 201
        line 601: 210
        line 602: 219
        line 610: 228
        line 611: 239
        line 612: 245
        line 613: 250
        line 615: 259
        line 617: 270
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52       3     6 ifModifiedSince   J
           57       5     8   iae   Ljava/lang/IllegalArgumentException;
           62      41     6 ifModifiedSince   J
           23      80     4 lastModified   J
          122      13     4 lastModified   J
          239      31     4 errMsg   Ljava/lang/String;
          245      25     5 errArgs   [Ljava/lang/Object;
            0     271     0  this   Ljakarta/servlet/http/HttpServlet;
            0     271     1   req   Ljakarta/servlet/http/HttpServletRequest;
            0     271     2  resp   Ljakarta/servlet/http/HttpServletResponse;
            7     264     3 method   Ljava/lang/String;
      StackMapTable: number_of_entries = 13
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ class java/lang/String, long ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ long ]
        frame_type = 31 /* same */
        frame_type = 249 /* chop */
          offset_delta = 8
        frame_type = 2 /* same */
        frame_type = 31 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 41 /* same */
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  public void service(jakarta.servlet.ServletRequest, jakarta.servlet.ServletResponse) throws jakarta.servlet.ServletException, java.io.IOException;
    descriptor: (Ljakarta/servlet/ServletRequest;Ljakarta/servlet/ServletResponse;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=3
         0: aload_1
         1: checkcast     #66                 // class jakarta/servlet/http/HttpServletRequest
         4: astore_3
         5: aload_2
         6: checkcast     #129                // class jakarta/servlet/http/HttpServletResponse
         9: astore        4
        11: goto          33
        14: astore        5
        16: new           #364                // class jakarta/servlet/ServletException
        19: dup
        20: getstatic     #42                 // Field lStrings:Ljava/util/ResourceBundle;
        23: ldc_w         #366                // String http.non_http
        26: invokevirtual #48                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
        29: invokespecial #368                // Method jakarta/servlet/ServletException."<init>":(Ljava/lang/String;)V
        32: athrow
        33: aload_0
        34: aload_3
        35: aload         4
        37: invokevirtual #369                // Method service:(Ljakarta/servlet/http/HttpServletRequest;Ljakarta/servlet/http/HttpServletResponse;)V
        40: return
      Exception table:
         from    to  target type
             0    11    14   Class java/lang/ClassCastException
      LineNumberTable:
        line 653: 0
        line 654: 5
        line 657: 11
        line 655: 14
        line 656: 16
        line 658: 33
        line 659: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5       9     3 request   Ljakarta/servlet/http/HttpServletRequest;
           11       3     4 response   Ljakarta/servlet/http/HttpServletResponse;
           16      17     5     e   Ljava/lang/ClassCastException;
            0      41     0  this   Ljakarta/servlet/http/HttpServlet;
            0      41     1   req   Ljakarta/servlet/ServletRequest;
            0      41     2   res   Ljakarta/servlet/ServletResponse;
           33       8     3 request   Ljakarta/servlet/http/HttpServletRequest;
           33       8     4 response   Ljakarta/servlet/http/HttpServletResponse;
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/ClassCastException ]
        frame_type = 253 /* append */
          offset_delta = 18
          locals = [ class jakarta/servlet/http/HttpServletRequest, class jakarta/servlet/http/HttpServletResponse ]
    Exceptions:
      throws jakarta.servlet.ServletException, java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: ldc_w         #372                // String jakarta.servlet.http.LocalStrings
         3: invokestatic  #374                // Method java/util/ResourceBundle.getBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;
         6: putstatic     #42                 // Field lStrings:Ljava/util/ResourceBundle;
         9: iconst_5
        10: anewarray     #117                // class java/lang/String
        13: dup
        14: iconst_0
        15: ldc_w         #378                // String authorization
        18: aastore
        19: dup
        20: iconst_1
        21: ldc_w         #380                // String cookie
        24: aastore
        25: dup
        26: iconst_2
        27: ldc_w         #382                // String x-forwarded
        30: aastore
        31: dup
        32: iconst_3
        33: ldc_w         #384                // String forwarded
        36: aastore
        37: dup
        38: iconst_4
        39: ldc_w         #386                // String proxy-authorization
        42: aastore
        43: invokestatic  #388                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
        46: putstatic     #285                // Field SENSITIVE_HTTP_HEADERS:Ljava/util/List;
        49: return
      LineNumberTable:
        line 85: 0
        line 87: 9
        line 88: 43
        line 87: 49
}
SourceFile: "HttpServlet.java"
NestMembers:
  jakarta/servlet/http/HttpServlet$NoBodyAsyncContextListener
  jakarta/servlet/http/HttpServlet$NoBodyPrintWriter
  jakarta/servlet/http/HttpServlet$NoBodyOutputStream
  jakarta/servlet/http/HttpServlet$NoBodyResponse
  jakarta/servlet/http/HttpServlet$TomcatHack
BootstrapMethods:
  0: #499 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #497 \u0001, TRACE
InnerClasses:
  public static final #515= #511 of #513; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
